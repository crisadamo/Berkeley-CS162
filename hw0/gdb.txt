What is the value of argv?
argv = (char **) 0x7fffffffe618

What is pointed to by argv? (hint: print argv[0])
argv[0] = 0x7fffffffe847 "/home/vagrant/code/personal/hw0/wc"

What is the address of the function main?
_main = {int (int, char **)} 0x4006fd <main>

Try info stack. Explain what you see.
(gdb) info stack
#0  print (lines=66, words=215, chars=1466, name=0x7fffffffe86a "wc.c") at wc.c:64
#1  0x00000000004008b2 in counts (file=0x7fffffffe86a "wc.c") at wc.c:53
#2  0x0000000000400747 in main (argc=1, argv=0x7fffffffe620) at wc.c:21

解释：函数调用栈有三层，main->counts->print层次调用，目前位于最底层print中。


Try info frame. Explain what you see.
Stack level 0, frame at 0x7fffffffe4c0:
 rip = 0x400940 in print (wc.c:64); saved rip = 0x4008b2
 called by frame at 0x7fffffffe510
 source language c.
 Arglist at 0x7fffffffe4b0, args: lines=66, words=215, chars=1466, name=0x7fffffffe86a "wc.c"
 Locals at 0x7fffffffe4b0, Previous frame's sp is 0x7fffffffe4c0
 Saved registers:
  rbp at 0x7fffffffe4b0, rip at 0x7fffffffe4b8

解释：目前的栈层级（level0），这个函数帧的地址0x7fffffffe4c0(上一个函数栈帧结束位置)；
      程序计数器PC保存在寄存器rip中，目前为0x400940(递增顺序)，print函数调用返回时对应的指令计数是0x4008b2，将它保存在栈底。
      print函数在0x7fffffffe510栈帧(counts函数)中被调用。
      c语言程序
      参数位置0x7fffffffe4b0（本函数栈的底部）,通过移位可以获得上一个函数传给print的4个参数。
      本函数栈的底部开始地址是0x7fffffffe4b0（高向底），前一个栈的顶地址（esp）0x7fffffffe4c0。
      本函数栈的底部地址和程序计数器地址，分别保存在寄存器rbp和rip中。

Try info registers. Which registers are holding aspects of the program that you recognize?
(gdb) info registers
rax            0x42     66
rbx            0x0      0
rcx            0x7fffffffe86a   140737488349290 参数$4
rdx            0x5ba    1466 参数$3
rsi            0xd7     215  参数$2
rdi            0x42     66   参数$1
rbp            0x7fffffffe4b0   0x7fffffffe4b0  函数栈底部地址寄存器
rsp            0x7fffffffe490   0x7fffffffe490  栈顶地址寄存器
r8             0x7ffff7dd4e80   140737351863936
r9             0x7ffff7dea530   140737351951664
r10            0x7fffffffe280   140737488347776
r11            0x246    582
r12            0x400610 4195856
r13            0x7fffffffe610   140737488348688
r14            0x0      0
r15            0x0      0
rip            0x400940 0x400940 <print+24>   程序计数器寄存器。
eflags         0x206    [ PF IF ]
cs             0x33     51
ss             0x2b     43
ds             0x0      0
es             0x0      0
fs             0x0      0
gs             0x0      0
